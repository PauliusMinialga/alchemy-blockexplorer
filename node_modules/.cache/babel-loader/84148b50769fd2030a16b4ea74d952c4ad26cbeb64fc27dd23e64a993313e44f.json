{"ast":null,"code":"var _jsxFileName = \"/Users/pauliusmipauliusnialga/Desktop/blockexplorer/src/App.js\",\n  _s = $RefreshSig$();\nimport { Alchemy, Network } from 'alchemy-sdk';\nimport { useEffect, useState } from 'react';\nimport './App.css';\n\n// Refer to the README doc for more information about using API\n// keys in client-side code. You should never do this in production\n// level code.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst settings = {\n  apiKey: process.env.REACT_APP_ALCHEMY_API_KEY,\n  network: Network.ETH_MAINNET\n};\n\n// In this week's lessons we used ethers.js. Here we are using the\n// Alchemy SDK is an umbrella library with several different packages.\n//\n// You can read more about the packages here:\n//   https://docs.alchemy.com/reference/alchemy-sdk-api-surface-overview#api-surface\nconst alchemy = new Alchemy(settings);\nfunction App() {\n  _s();\n  const [blockNumber, setBlockNumber] = useState();\n  const [blockTimestamp, setBlockTimestamp] = useState();\n  const [blockDifficulty, setBlockDifficulty] = useState();\n  const [blockTransactions, setBlockTransactions] = useState();\n  function truncateHash(hash) {\n    if (hash) {\n      return hash.slice(0, 6) + \"...\" + hash.slice(-4);\n    }\n    return \"\";\n  }\n  useEffect(() => {\n    async function getBlockNumber() {\n      setBlockNumber(await alchemy.core.getBlockNumber());\n      if (blockNumber) {\n        let data = await alchemy.core.getBlock(blockNumber);\n        setBlockTimestamp(data.timestamp);\n        setBlockDifficulty(data.difficulty);\n        console.log(\"request\");\n        let transactionsData = await alchemy.core.getBlockWithTransactions(blockNumber);\n        setBlockTransactions(transactionsData.transactions);\n        console.log(blockTransactions);\n      }\n    }\n    getBlockNumber();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Block Number: \", blockNumber]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Block Difficulty: \", blockDifficulty]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Block Timestamp: \", blockTimestamp]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Number of transactions: \", blockTransactions ? blockTransactions.length : \"undefined\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"TX Hash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Block Hash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: blockTransactions && blockTransactions.map((transaction, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          id: index,\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: truncateHash(transaction.hash)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: truncateHash(transaction.block)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: truncateHash(transaction.hash)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: truncateHash(transaction.hash)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: truncateHash(transaction.hash)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"kZXWLzjBkPuqHmK5qCgNH2q6fYY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Alchemy","Network","useEffect","useState","settings","apiKey","process","env","REACT_APP_ALCHEMY_API_KEY","network","ETH_MAINNET","alchemy","App","blockNumber","setBlockNumber","blockTimestamp","setBlockTimestamp","blockDifficulty","setBlockDifficulty","blockTransactions","setBlockTransactions","truncateHash","hash","slice","getBlockNumber","core","data","getBlock","timestamp","difficulty","console","log","transactionsData","getBlockWithTransactions","transactions","length","map","transaction","index","block"],"sources":["/Users/pauliusmipauliusnialga/Desktop/blockexplorer/src/App.js"],"sourcesContent":["import { Alchemy, Network } from 'alchemy-sdk';\nimport { useEffect, useState } from 'react';\n\nimport './App.css';\n\n// Refer to the README doc for more information about using API\n// keys in client-side code. You should never do this in production\n// level code.\nconst settings = {\n  apiKey: process.env.REACT_APP_ALCHEMY_API_KEY,\n  network: Network.ETH_MAINNET,\n};\n\n\n// In this week's lessons we used ethers.js. Here we are using the\n// Alchemy SDK is an umbrella library with several different packages.\n//\n// You can read more about the packages here:\n//   https://docs.alchemy.com/reference/alchemy-sdk-api-surface-overview#api-surface\nconst alchemy = new Alchemy(settings);\n\nfunction App() {\n  const [blockNumber, setBlockNumber] = useState();\n  const [blockTimestamp, setBlockTimestamp] = useState();\n  const [blockDifficulty, setBlockDifficulty] = useState();\n  const [blockTransactions, setBlockTransactions] = useState();\n\nfunction truncateHash(hash){\n  if (hash) {\n    return hash.slice(0, 6) + \"...\" + hash.slice(-4);\n  }\n  return \"\";\n}\n\n  useEffect(() => {\n    async function getBlockNumber() {\n      setBlockNumber(await alchemy.core.getBlockNumber());\n\n      if (blockNumber) {\n        let data = await alchemy.core.getBlock(blockNumber);\n        setBlockTimestamp(data.timestamp);\n        setBlockDifficulty(data.difficulty);\n\n        console.log(\"request\");\n\n        let transactionsData = await alchemy.core.getBlockWithTransactions(blockNumber);\n        setBlockTransactions(transactionsData.transactions);\n\n        console.log(blockTransactions);\n      }\n    }\n\n    getBlockNumber();\n  });\n\n  return <div className=\"App\">\n    <p>Block Number: {blockNumber}</p>\n    <p>Block Difficulty: {blockDifficulty}</p>\n    <p>Block Timestamp: {blockTimestamp}</p>\n    <br></br>\n    <p>Number of transactions: {blockTransactions ? blockTransactions.length : \"undefined\"}</p>\n\n    <hr></hr>\n    <table>\n      <thead>\n        <tr>\n          <th>TX Hash</th>\n          <th>Block Hash</th>\n          <th>From</th>\n          <th>To</th>\n          <th>Data</th>\n        </tr>\n      </thead>\n      <tbody>\n        {blockTransactions && (blockTransactions.map((transaction, index) =>\n        <tr id={index}>\n          <td>{truncateHash(transaction.hash)}</td>\n          <td>{truncateHash(transaction.block)}</td>\n          <td>{truncateHash(transaction.hash)}</td>\n          <td>{truncateHash(transaction.hash)}</td>\n          <td>{truncateHash(transaction.hash)}</td>\n        </tr>\n        ))}\n      </tbody>\n    </table>\n  </div>;\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}